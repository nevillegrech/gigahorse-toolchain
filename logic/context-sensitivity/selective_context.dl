

.comp SelectiveContext <LocalAnalysis> : PrivateOnlyContextSensitivity <LocalAnalysis> {

  MergeContext(ctx, caller, ctx):-
    ReachableContext(ctx, caller),
    local.BlockHasTrivialControl(caller).

  MergeContext(ctx, caller, newCtx):-
    ReachableContext(ctx, caller),
    TruncateContextIfNeeded(ctx, maybeCutDownCtx),
    !local.BlockHasTrivialControl(caller),
    newCtx = [caller, maybeCutDownCtx].
    .plan 1:(2,1)
}

/**
  Selective context sensitivity with a public function context component
  Does not implement/care for the NO_PUBLIC_CONTEXT flag.
*/
.comp SelectiveContextPlus <LocalAnalysis> : PublicComponentContextSensitivity <LocalAnalysis> {

  MergeContext(ctx, caller, ctx):-
    ReachableContext(ctx, caller),
    local.BlockHasTrivialControl(caller),
    !local.PublicFunctionJump(caller, _, _).

  MergeContext(ctx, caller, [pub, newPrivateContext]):-
    ReachableContext(ctx, caller),
    DecomposeContext(ctx, pub, pri),
    TruncateContextIfNeeded(pub, pri, cutDownPri),
    !local.PublicFunctionJump(caller, _, _),
    !local.BlockHasTrivialControl(caller),
    newPrivateContext = [caller, cutDownPri].
    .plan 1:(2,1,3), 2:(3,2,1)

  MergeContext(ctx, caller, newContext) :-
    ReachableContext(ctx, caller),
    local.PublicFunctionJump(caller, sigHash, _),
    !MaxContextDepth(sigHash, -1),
    DecomposeContext(ctx, _, callCtx),
    newContext = [sigHash, callCtx].

}